import { RollingFragment } from '@/(pages)/slides/contract-with-devil/_components/RollingFragment';
import clsx from 'clsx';
import { ReactElement } from 'react';
import { Fragment } from '../../_components/Fragment';
import {
	HighLevelArch,
	highLevelArchStyles,
} from '../../_components/HighLevelArch';
import { Section } from '../../_components/Section';
import styles from './styles.module.css';

export function GraphQLProblem(): ReactElement {
	return (
		<>
			<Section bgColor="accent" transition="slide-in slide-out">
				<p>
					–Ø–∫—â–æ –≤—Å–µ –¥–æ–±—Ä–µ... <br />
					<span className="like-h3">—Ç–æ–¥—ñ –≤ —á–æ–º—É –ø—Ä–æ–±–ª–µ–º–∞?</span>
				</p>
			</Section>
			<Section bgColor="accent">
				<p>
					–ü—Ä–æ–±–ª–µ–º–∞ —î! <br />{' '}
					<Fragment>–Ø —á–∏—Ç–∞–≤ –ø—Ä–æ –Ω–µ—ó –≤ –∫–Ω–∏–∂–∫–∞—Ö</Fragment> <br />{' '}
					<Fragment className="like-h3">
						–∞–ª–µ —è —ó—ó –Ω–µ —Ä–æ–∑—É–º—ñ–≤ –¥–æ –∫—ñ–Ω—Ü—è!
					</Fragment>
				</p>
			</Section>
			<Section bgColor="dark">
				<h3>–§–æ–∫—É—Å –ø—Ä–∏–∫–ª–∞–¥—É ü™Ñ</h3>
			</Section>
			<Section bgColor="light">
				<FragmentEqualComponent stage="initial" />
			</Section>
			<Section bgColor="light">
				<h3>–ú–∏ —Å–∞–º—ñ —Å–µ–±–µ —Ä–æ–±–∏–º–æ –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–ª–µ–∂–Ω–∏–º–∏ –≤—ñ–¥ –ê–ü–Ü!</h3>
			</Section>
			<Section bgColor="light" autoAnimate>
				<h3 data-id="when" className={styles.when}>
					–ö–æ–ª–∏
				</h3>
				<h3>–ê–ü–Ü –∑–º—ñ–Ω–∏—Ç—å—Å—è...</h3>
			</Section>
			<Section bgColor="light" autoAnimate>
				<h3 data-id="when" className={styles.when}>
					–Ø–∫—â–æ
				</h3>
				<h3>–ê–ü–Ü –∑–º—ñ–Ω–∏—Ç—å—Å—è...</h3>
			</Section>
			<Section bgColor="light" autoAnimate>
				<h3 data-id="when" className={styles.when}>
					<s>–Ø–∫—â–æ</s> <br /> –ö–æ–ª–∏
				</h3>
				<h3>–ê–ü–Ü –∑–º—ñ–Ω–∏—Ç—å—Å—è...</h3>
			</Section>
			<Section
				bgColor="light"
				className={clsx(
					styles.circles,
					highLevelArchStyles.initialStructure,
					highLevelArchStyles.showGreenArrows
				)}
			>
				<HighLevelArch />
			</Section>

			<Section bgColor="light" autoAnimate>
				<p>
					<em>–¢–∞–∫ –æ—Ç,</em> <br />
					–ö–æ–ª–∏ –ê–ü–Ü –±—É–¥–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—å
				</p>
				<Fragment className="like-h3">
					–ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Å—Ç—ñ–π–Ω–æ –≤–Ω–æ—Å–∏—Ç–∏ <br /> –ø—Ä–∞–≤–∫–∏ –≤ –∫–æ–¥ —à–∞–±–ª–æ–Ω—É!
				</Fragment>
			</Section>

			<Section bgColor="dark" className="flex-section">
				<h3>
					–•—ñ–±–∞ –Ω–µ –≤ —Ü—å–æ–º—É –±—É–≤ —Å–µ–Ω—Å <br /> –∞–≤—Ç–æ-–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ñ–≤?
				</h3>
				<ul>
					<RollingFragment component="li" fx="fade-up">
						–û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–¥–æ-–≥–µ–Ω–µ—Ä–∞—Ü—ñ—é
					</RollingFragment>
					<RollingFragment component="li" fx="fade-up">
						TypeScript –±–∞—á–∏—Ç—å –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ üö®üö®üö®
					</RollingFragment>
					<RollingFragment component="li" fx="fade-up">
						–í–∏–¥–∞—î –Ω–∞–º –ø–æ–º–∏–ª–∫–∏
					</RollingFragment>
					<RollingFragment component="li" fx="fade-up">
						–ú–∏ —ó—Ö <em>—à–≤–∏–¥–∫–æ —Ñ—ñ–∫—Å–∏–º–æ</em> —ñ –≤—Å–µ –∑–Ω–æ–≤—É –¥–æ–±—Ä–µ!{' '}
						<Fragment>&nbsp;‚úÖ&nbsp;</Fragment>
					</RollingFragment>
				</ul>
			</Section>

			<Section bgColor="darker">
				<h3>&quot;–®–≤–∏–¥–∫–æ —Ñ—ñ–∫—Å–∏—Ç–∏&quot;</h3>
				<Fragment component="p">–ú–æ–∂–Ω–∞ –∫–æ–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –≤–µ–ª–∏–∫–∞</Fragment>
			</Section>

			<Section bgColor="darker">
				<h3>–ß–∏–º –±—ñ–ª—å—à–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ñ–≤,</h3>
				<Fragment component="p">
					—Ç–∏–º –º–µ–Ω—à–∞ –≤–∞—à–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å –≤–Ω–µ—Å–µ–Ω–Ω—è –ø—Ä–∞–≤–æ–∫
				</Fragment>
			</Section>

			<Section bgColor="darker">
				<h3>
					–¢–æ–º—É —â–æ <br /> –∑–Ω–∞–Ω–Ω—è –∑ –ê–ü–Ü –±—É–¥—É—Ç—å –≤—Å—é–¥–∏!
				</h3>
				<Fragment component="p">–Ü –ø–æ –¥–µ–∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤!</Fragment>
			</Section>

			<Section bgColor="darker">
				<h3>
					–°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—î <br />
					–ö–∞—Ä—Ç–∫–æ–≤–∏–º –±—É–¥–∏–Ω–∫–æ–º
				</h3>
				<Fragment component="p">
					–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –æ–¥–Ω–æ–≥–æ, –Ω–µ–æ–±–µ—Ä–µ–∂–Ω–æ–≥–æ, –ø—á–∏—Ö—É –≤ –ê–ü–Ü, <br />
					—â–æ–± –π–æ–≥–æ —Ä–æ–∑–Ω–µ—Å–ª–æ!
				</Fragment>
			</Section>
			<Section bgColor="dark">
				<h3>–Ø–∫—â–æ –≤–∏ –¥—É–º–∞—î—Ç–µ, —â–æ —è –≤–∞—Å ‚Äú–ª—è–∫–∞—é‚Äù...</h3>
			</Section>
			<Section bgColor="dark" className="flex-section">
				<h3>
					–†–µ–∞–ª—å–Ω–∏–π –ø—Ä–æ—î–∫—Ç <br />
					—è–∫–∏–π –º–∏ –≤–µ–¥–µ–º–æ –≤–∂–µ 2 —Ä–æ–∫–∏
				</h3>
				<ul className={styles.projectCtxList}>
					<RollingFragment component="li">
						ERP —Å–∏—Å—Ç–µ–º–∞
					</RollingFragment>
					<RollingFragment component="li">
						–ú–æ–Ω–æ—Ä–æ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞
					</RollingFragment>
					<RollingFragment component="li">
						–ú—É–ª—å—Ç–∏-–∑–æ–Ω–∏ (Next.js)
					</RollingFragment>
					<RollingFragment component="li">4 –∫–æ–º–∞–Ω–¥–∏</RollingFragment>
					<RollingFragment component="li">3 –∫–æ–º–∞–Ω–¥–∏</RollingFragment>
				</ul>
			</Section>
			<Section bgColor="dark">
				<h3>–¢—Ä–æ—Ö–∏ —Ü–∏—Ñ—Ä –∑ –ø—Ä–æ—î–∫—Ç—É</h3>
				<div className="r-stack">
					<img
						alt=""
						className="fragment fade-out"
						data-fragment-index="0"
						src="/static/slides-contract-with-devil/operations-qty.png"
					/>
					<img
						alt=""
						className="fragment current-visible"
						data-fragment-index="0"
						src="/static/slides-contract-with-devil/fragments-qty.png"
					/>
				</div>
			</Section>
			<Section bgColor="dark" autoAnimate>
				<h3>–ü—Ä–∏–∫–ª–∞–¥ –∑–º—ñ–Ω–∏ –°—É—Ç–Ω–æ—Å—Ç–µ–π</h3>
				<div className={styles.expand}>
					<table
						className={clsx(
							styles.tableCode,
							styles.tableCodeCompact
						)}
					>
						<tbody>
							<tr>
								<td>
									<pre data-id="code-animate">
										<code className="hljs graphql">{`


                        fragment UserMiniCard on User {
                            id
                            shortName
                            avatar
                        }



`}</code>
									</pre>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</Section>

			<Section bgColor="dark" autoAnimate>
				<h3>–ü—Ä–∏–∫–ª–∞–¥ –∑–º—ñ–Ω–∏ –°—É—Ç–Ω–æ—Å—Ç–µ–π</h3>
				<div className={styles.expand}>
					<table
						className={clsx(
							styles.tableCode,
							styles.tableCodeCompact
						)}
					>
						<tbody>
							<tr>
								<td width="48%">
									<pre data-id="code-animate">
										<code className="hljs graphql">{`


fragment UserMiniCard on User {
    id
    shortName
    avatar
}



`}</code>
									</pre>
								</td>
								<td>&rArr;</td>
								<td width="48%">
									<pre data-id="code-animate">
										<code className="hljs graphql">{`fragment UserMiniCard on Employee {
    id
    shortName
    profile {
        settings {
            userPhoto {
                value
            }
        }
    }
}
`}</code>
									</pre>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</Section>
			<Section bgColor="darker" className="flex-section">
				<h3>–§–∞–∫–∞–ø–∏...</h3>
			</Section>
			<Section bgColor="accent" className="flex-section">
				<h3>
					‚Äú–ë–µ–∫–µ–Ω–¥–∏‚Äù –≤–Ω–µ—Å–ª–∏ <br />
					–ª–∞–º–∞—é—á—ñ –∑–º—ñ–Ω–∏ –≤ –ê–ü–Ü
				</h3>
				<div className={styles.expand}>
					<div>
						<RollingFragment component="div" fx="fade-up">
							TypeScript –ø–æ–º–∏–ª–æ–∫ –±—É–ª–æ —Å—Ç—ñ–ª—å–∫–∏, —â–æ –ø—Ä–æ—î–∫—Ç –Ω–µ
							–∑–∞–ø—É—Å–∫–∞–≤—Å—è.
						</RollingFragment>
						<RollingFragment component="div" fx="fade-up">
							–ú–∞–π–∂–µ 6 –≥–æ–¥–∏–Ω –º–∏ –¥–æ–≤–æ–¥–∏–ª–∏ –≤—Å–µ –¥–æ –ª–∞–¥—É.
						</RollingFragment>
						<RollingFragment component="div" fx="fade-up">
							4 –∫–æ–º–∞–Ω–¥–∏ (11 —Ñ—Ä–æ–Ω—Ç—ñ–≤ –≤ –∑–∞–≥–∞–ª—å–Ω–æ–º—É —Å–∫–ª–∞–¥—ñ)
						</RollingFragment>
						<RollingFragment component="div" fx="fade-up">
							–Ω–µ —Ä–æ–±–∏–ª–∏ –Ω—ñ—á–æ–≥–æ –∑ —Ç–æ–≥–æ, —â–æ –∑–∞–ø–ª–∞–Ω—É–≤–∞–ª–∏ –Ω–∞ —Å–ø—Ä–∏–Ω—Ç
						</RollingFragment>
					</div>
				</div>
			</Section>

			<Section bgColor="accent" className="flex-section">
				<h3>11 —Ö 6 = 66 –≥–æ–¥–∏–Ω</h3>
				<div className={styles.expand}>
					<RollingFragment component="div" fx="fade-up">
						–ü–æ–º–Ω–æ–∂—Ç–µ —Ü–µ–π —á–∞—Å –Ω–∞ —Ä–µ–π—Ç–∏ –≤–∞—à–∏—Ö —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤,
					</RollingFragment>
					<RollingFragment component="div" fx="fade-up">
						–¥–æ–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ñ–π –Ω–∞ —Å–ø—Ä–∏–Ω—Ç—É,
					</RollingFragment>
					<RollingFragment component="div" fx="fade-up">
						–æ—Ç—Ä–∏–º–∞–π—Ç–µ —Å—É–º—É –≤ —è–∫—É –≤–∞–º –æ–±—ñ–π–¥–µ—Ç—å—Å—è —Ç–∞–∫–∏–π —Ñ–∞–∫–∞–ø
					</RollingFragment>
				</div>
			</Section>
		</>
	);
}

function FragmentEqualComponent(props: {
	stage:
		| 'initial'
		| 'deprecated'
		| 'titleVariants'
		| 'changeComponent'
		| 'removeDeprecation';
}): ReactElement {
	let titleInFragment = 'title';
	let titleInComponent = 'product.title';
	let componentEnd = '';

	switch (props.stage) {
		case 'deprecated':
			titleInFragment = 'title @deprecated';
			break;
		case 'titleVariants':
			componentEnd = '\n\n\n\n';
			titleInFragment = `title @deprecated
    titleVariants {
        current
    }`;
			break;
		case 'changeComponent':
			componentEnd = '\n\n\n\n';
			titleInComponent = `product.titleVariants.current`;
			titleInFragment = `title @deprecated
    titleVariants {
        current
    }`;
			break;
		case 'removeDeprecation':
			titleInComponent = `product.titleVariants.current`;
			componentEnd = '\n\n\n';
			titleInFragment = `titleVariants {
        current
    }`;
			break;
	}

	return (
		<>
			<h3 data-id="code-title">
				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;API === Component
			</h3>
			<div className={styles.expand}>
				<table className={styles.tableCode}>
					<tbody>
						<tr>
							<td width="50%">
								<pre
									data-id="code-animation"
									className="code-wrapper-hide-numbers"
								>
									<code
										className="hljs graphql"
										data-line-numbers={true}
									>
										{`fragment ProductCard on Product {
    id
    ${titleInFragment}
    price
    status
    covers {
        ...CoverCarousel
    }
}`}
									</code>
								</pre>
							</td>
							<td width="50%">
								<pre
									data-id="code-animation"
									className="code-wrapper-hide-numbers"
								>
									<code
										className="hljs tsx"
										data-line-numbers={true}
									>
										{`<article>
    <CoverCarousel covers={product.covers} />
    <header>
        <h2>{${titleInComponent}}</h2>
        <span>{product.status}</span>
    </header>
    <p>Price: {product.price}</p>
    ...
</article>${componentEnd}`}
									</code>
								</pre>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</>
	);
}
